version()
version(R-base)
R.version()
R.Version
R.Version()
help(par)
q()
q()
library(coin)
library("coin", lib.loc="D:/Program Files/R/R-3.1.2/library")
RoundingTimes <- data.frame(
times = c(5.40, 5.50, 5.55,
5.85, 5.70, 5.75,
5.20, 5.60, 5.50,
5.55, 5.50, 5.40,
5.90, 5.85, 5.70,
5.45, 5.55, 5.60,
5.40, 5.40, 5.35,
5.45, 5.50, 5.35,
5.25, 5.15, 5.00,
5.85, 5.80, 5.70,
5.25, 5.20, 5.10,
5.65, 5.55, 5.45,
5.60, 5.35, 5.45,
5.05, 5.00, 4.95,
5.50, 5.50, 5.40,
5.45, 5.55, 5.50,
5.55, 5.55, 5.35,
5.45, 5.50, 5.55,
5.50, 5.45, 5.25,
5.65, 5.60, 5.40,
5.70, 5.65, 5.55,
6.30, 6.30, 6.25),
methods = factor(rep(c("Round Out", "Narrow Angle", "Wide Angle"), 22)),
block = factor(rep(1:22, rep(3, 22))))
RoundingTimes
example(wilcoxsign_test)
install.packages('multcomp')
example(wilcoxsign_test)
q()
install.packages("vcd")
library(vcd)
install.packages("vcd")
library(vcd)
mytable <- xtabs(~Treatment + Improved,data=Arthritis)
print(mytable)
mytable
summary(mytable)
install.packages('xlsx')
library("xlsx", lib.loc="D:/Program Files/R/R-3.1.2/library")
install.packages('rjava')
install.packages('rJava')
install.packages('xlsx')
library("xlsx", lib.loc="D:/Program Files/R/R-3.1.2/library")
library(rJava)
install.packages('rJava')
library(xlsx)
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
install.packages(c("boot", "class", "cluster", "codetools", "colorspace", "digest", "foreign", "ggplot2", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "multcomp", "nlme", "nnet", "plyr", "psych", "Rcpp", "rpart", "sandwich", "spatial", "survival", "zoo"))
library('xlsx')
install.packages('rJava')
library(rJava)
help(p.adjust)
help(p.adjust)
p <- rep(0.05,10)
p
p.adjust(p)
p <- seq(from = 0.0001,to = 0.08,by = 0.0001)
p.adjust(p)
p.adjust(p,method = 'fdr')
p <- seq(from = 0.001,to = 0.08,by = 0.001)
p
p.adjust(p,method = 'fdr')
p[0] <- 0.0001
p.adjust(p,method = 'fdr')
p[0] <- 0.000000001
p.adjust(p,method = 'fdr')
p
p[1] <- 0.000000001
p.adjust(p,method = 'fdr')
p <- c(0.007,0.05,0.4,0.5)
p.adjust(p,method = 'fdr')
p <- c(0.007,0.05,0.4,0.5,rep(0.4,10))
p
p.adjust(p,method = 'fdr')
p <- c(0.002,rep(0.4,20))
p.adjust(p,method = 'fdr')
p <- c(0.002,rep(0.05,20))
p.adjust(p,method = 'fdr')
help(p.adjust)
q()
pval <- seq(from = 0.0001,to = 0.1,by = 0.01)
pval
p.adjust(pval)
pval <- seq(from = 0.0001,to = 0.1,by = 0.001)
p.adjust(pval)
pval <- seq(from = 0.0001,to = 0.01,by = 0.001)
p.adjust(pval)
pval
length(pval)
seq1 <- 1:10
seq1
seq1/10
seq1/10*0.05
p.adjust(pval) < seq1/10*0.05
p.adjust(pval)
setwd('E:./././GitHub/Myhub/Rbf/')
dir()
source('barplot.R')
cat('global_variables_cost.csv')
cat(file = 'global_variables_cost.csv')
source('curveplot.R')
source('curveplot.R')
curveplot_1
source('errbarplot.R')
mydata
source('errbarplot.R')
source('errbarplot.R')
mydata_subset
source('errbarplot.R')
source('errbarplot.R')
mydata_subset
general_stat
class(general_stat)
str(general_stat)
general_stat[[1]]
general_stat[[2]]
source('errbarplot.R')
occult_stat
source('errbarplot.R')
ls()
source('errbarplot.R')
str(occult_stat)
occult_stat$mean
occult_stat$mean -> data1
str(data1)
source('errbarplot.R')
source('errbarplot.R')
source('errbarplot.R')
plot1
plot1
source('errbarplot.R')
plot1
occult_stat
occult_stat$mean
data2plot
source('errbarplot.R')
plot1
